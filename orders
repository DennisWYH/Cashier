import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;
import java.util.TreeMap;

import javax.swing.JTextField;

public class Orders extends Observable {
	// Field Variables
	private Map<String, List<String>> data;
	
	
	// Constructor
	public Orders(){
		data = new TreeMap<String, List<String>>();
	
	}
	
	// Getters
	public Map<String, List<String>> getData() {
		return data;
	}
	
	// Setters
	public void setData(Map<String, List<String>> data) {
		this.data = data;
	}
	
	
	
	/**
	 *  Method to add new order to orders variable
	 * @param newOrder
	 */
	public void addNewOrder(List<JTextField> newOrder) {

		List<String> list = new ArrayList<String>();
		String key = newOrder.get(0).getText();
		if(data.containsKey(key)){
			list = data.get(key);
		}
		list.add(newOrder.get(1).getText());
		list.add(newOrder.get(2).getText());
		list.add(newOrder.get(3).getText());
		data.put(key, list);
		
		
		setChanged();
		notifyObservers();
	}
	
	/**
	 *  Method to delete orders in model 
	 */
	public void deleteOrder(String key){
		if(data.containsKey(key)){
			data.remove(key);
		}		
		setChanged();
		notifyObservers();
	}
	

}
